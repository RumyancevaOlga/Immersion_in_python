# В большой текстовой строке подсчитать количество встречаемых слов и
# вернуть 10 самых частых. Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.

LIMIT = 10

text = 'Python (в русском языке встречаются названия пито́н или па́йтон) - высокоуровневый ' \
       'язык программирования общего назначения с динамической строгой типизацией и ' \
       'автоматическим управлением памятью, ориентированный на повышение ' \
       'производительности разработчика, читаемости кода и его качества, а также на ' \
       'обеспечение переносимости написанных на нём программ. Язык является полностью ' \
       'объектно-ориентированным в том плане, что всё является объектами. Необычной ' \
       'особенностью языка является выделение блоков кода пробельными отступами. ' \
       'Синтаксис ядра языка минималистичен, за счёт чего на практике редко возникает ' \
       'необходимость обращаться к документации. Сам же язык известен как ' \
       'интерпретируемый и используется в том числе для написания скриптов. Недостатками ' \
       'языка являются зачастую более низкая скорость работы и более высокое потребление ' \
       'памяти написанных на нём программ по сравнению с аналогичным кодом, написанным ' \
       'на компилируемых языках, таких как C или C++. Python является ' \
       'мультипарадигменным языком программирования, поддерживающим императивное, ' \
       'процедурное, структурное, объектно-ориентированное программирование, ' \
       'метапрограммирование и функциональное программирование. Задачи обобщённого ' \
       'программирования решаются за счёт динамической типизации. Аспектно-ориентированное ' \
       'программирование частично поддерживается через декораторы, более полноценная ' \
       'поддержка обеспечивается дополнительными фреймворками. Такие методики как ' \
       'контрактное и логическое программирование можно реализовать с помощью библиотек ' \
       'или расширений. Основные архитектурные черты — динамическая типизация, ' \
       'автоматическое управление памятью, полная интроспекция, механизм обработки ' \
       'исключений, поддержка многопоточных вычислений с глобальной блокировкой ' \
       'интерпретатора, высокоуровневые структуры данных. Поддерживается разбиение ' \
       'программ на модули, которые, в свою очередь, могут объединяться в пакеты.'

# создаю список слов и чищу его от символов, символы можно еще добавить, опускаю регистр
my_list = text.split()

for i in range(len(my_list)):
    my_list[i] = my_list[i].strip('.,!?":-()—').lower()

# чищу от пустых строк
my_list = list(filter(None, my_list))

set_list = set(my_list)

# создаю словарь, где слово - ключ, кол-во вхождений - значение
my_dict = {key: my_list.count(key) for (value, key) in enumerate(my_list)}

# сортирую
sort_dict = dict(sorted(my_dict.items(), key=lambda item: item[1], reverse=True))

# вывожу первые 10
for i in range(LIMIT):
    print(list(sort_dict.keys())[i], 'встречается', list(sort_dict.values())[i], 'раз')
