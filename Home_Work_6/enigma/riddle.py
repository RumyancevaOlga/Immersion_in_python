# Создайте модуль с функцией внутри.
# Функция получает на вход загадку, список с возможными вариантами отгадок и количество
# попыток на угадывание.
# Программа возвращает номер попытки, с которой была отгадана загадка или ноль, если
# попытки исчерпаны.

# Добавьте в модуль с загадками функцию, которая хранит словарь списков.
# Ключ словаря - загадка, значение - список с отгадками.
# Функция в цикле вызывает загадывающую функцию, чтобы передать ей все свои загадки.

# Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки) и число 
# (номер попытки, с которой она угадана). 
# Функция формирует словарь с информацией о результатах отгадывания. 
# Для хранения используйте защищённый словарь уровня модуля.
# Отдельно напишите функцию, которая выводит результаты угадывания из защищённого словаря в удобном 
# для чтения виде. 
# Для формирования результатов используйте генераторное выражение.

__all__ = ['game', 'show']

def enigma(question, variants, attempts=3):
    for i in range(1, attempts + 1):
        answer = input(f'Отгадайте загадку, попытка {i}: {question}: ').strip().lower()
        if answer in variants:
            print(f'Вы угадали с {i} попытки')
            return (i)
        else:
            print('Вы не угадали')
    return 0


def game():
    dict_enigma = {
        'Зимой и летом одним цветом': ['ель', 'ёлка', 'елка'],
        'Кто его раздевает, тот слёзы проливает': ['лук', 'лучок', 'перец']
    }
    for key, value in dict_enigma.items():
        result(key, enigma(key, value))


def result(text, r_attempts):
    _result[text] = r_attempts


def show():
    output = '\n'.join([f'Вы отгадали загадку {key} с {value} попытки.' for key, value in _result.items()])
    print(output)


_result = {}

# question = 'Зимой и летом одним цветом'
# variants = ['ель', 'ёлка', 'елка']
# attempts = 4
# print(enigma(question, variants, attempts))
